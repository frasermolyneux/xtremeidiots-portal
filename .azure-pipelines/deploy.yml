trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  TerraformVersion: '0.14.8'
  AzTerraformRegion: 'uksouth'
  AzTerraformResourceGroup: 'xi-portal-terraform'
  AzTerraformStorageAccount: 'xiportaltfstate'
  AzSubscription: 'XI-Pay-As-You-Go'

stages: 
- stage: LegacyBuild

  pool:
    vmImage: 'windows-latest'

  jobs:
  - job: LegacyBuild

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: './src/nuget.config'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)/webapp"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: CopyFiles@2
      displayName: 'Copy terraform folder into staging directory'
      inputs: 
        SourceFolder: '$(Build.sourcesDirectory)/terraform'
        Contents: '**'
        TargetFolder: '$(Build.artifactStagingDirectory)/terraform'

    - task: ArchiveFiles@2
      displayName: "Package XI.Portal.FuncApp to artifact staging directory"
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/src/XI.Portal.FuncApp/bin/Release/netcoreapp3.1/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/XI.Portal.FuncApp.zip'
        replaceExistingArchive: true

    - publish: $(Build.artifactStagingDirectory)/XI.Portal.FuncApp.zip
      displayName: Publish XI.Portal.FuncApp artifact
      artifact: funcapp
      
    - publish: $(Build.artifactStagingDirectory)/terraform
      displayName: Publish terraform artifact
      artifact: terraform

    - publish: '$(Build.artifactStagingDirectory)/webapp'
      displayName: 'Publish website source artifact'
      artifact: webapp
  
- template: templates/deploy-application.yml
  parameters:
    environment: 'leo'

- stage: Build
  jobs:
  - template: templates/build-function-app.yml
    parameters: 
      jobName: 'BuildEventsFunctionApp'
      projectName: 'events-func'
      publishArtifact: true

  - template: templates/build-function-app.yml
    parameters: 
      jobName: 'BuildIngestFunctionApp'
      projectName: 'ingest-func'
      publishArtifact: true

  - template: templates/build-web-app.yml
    parameters: 
      jobName: 'BuildRepositoryWebApi'
      projectName: 'repository-webapi'
      nugetConfigPath: './src/nuget.config'
      publishArtifact: true

  - template: templates/build-function-app.yml
    parameters: 
      jobName: 'BuildRepositoryFunctionApp'
      projectName: 'repository-func'
      publishArtifact: true

  - template: templates/build-function-app.yml
    parameters: 
      jobName: 'BuildSyncFunctionApp'
      projectName: 'sync-func'
      publishArtifact: true

- stage: DeployPrd

  variables: 
    environment: 'prd'
    region: 'uksouth'
    instance: '01'
    AzSubscription: 'XI-Pay-As-You-Go'

  jobs:

  - job: DeployAppRegistrations
    steps:
      - task: AzureCLI@2
        displayName: Create Application Registrations
        inputs:
          azureSubscription: $(AzSubscription)
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          scriptPath: '$(Build.sourcesDirectory)/scripts/createAppRegistrations.ps1'

      - task: AzureCLI@2
        displayName: Create Application Credentials
        inputs:
          azureSubscription: $(AzSubscription)
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          scriptPath: '$(Build.sourcesDirectory)/scripts/appRegistrationCredentials.ps1'

  - job: DeployPortalCorePrd
    steps:
      - task: AzureCLI@2
        displayName: Deploy Portal Core Bicep
        inputs:
          azureSubscription: $(AzSubscription)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create \
            --template-file bicep/portalCore.bicep \
            --location "uksouth" \
            --parameters parLocation='uksouth' parEnvironment='prd'

  - job: DeployEventsAppBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $eventsApiAppName = 'portal-events-api-prd'
          $eventsApiAppId = (az ad app list --filter "displayName eq '$eventsApiAppName'" --query '[].appId') | ConvertFrom-Json

          az deployment group create `
          --resource-group 'rg-portal-prd-uksouth-01' `
          --template-file bicep/eventsApp.bicep  `
          --parameters parLocation='uksouth' parEnvironment='prd' parKeyVaultName='kv-portal-prd-uksouth-01' parFuncAppServicePlanName='plan-fn-portal-prd-uksouth-01' parAppInsightsName='ai-portal-prd-uksouth-01' parApiManagementName='apim-portal-prd-uksouth-01' parServiceBusName='sb-portal-prd-uksouth-01' parEventsApiAppId=$eventsApiAppId

  - template: templates/deploy-function-app.yml
    parameters:
      projectName: events-func
      jobName: DeployEventsFunctionApp
      functionAppName: 'fn-events-portal-$(environment)-$(region)-$(instance)'
      environmentServiceNameAzureRM: 'XI-Pay-As-You-Go'

  - job: DeployIngestAppBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create `
          --resource-group 'rg-portal-prd-uksouth-01' `
          --template-file bicep/ingestApp.bicep  `
          --parameters parLocation='uksouth' parEnvironment='prd' parKeyVaultName='kv-portal-prd-uksouth-01' parFuncAppServicePlanName='plan-fn-portal-prd-uksouth-01' parAppInsightsName='ai-portal-prd-uksouth-01' parApiManagementName='apim-portal-prd-uksouth-01' parServiceBusName='sb-portal-prd-uksouth-01'

  - template: templates/deploy-function-app.yml
    parameters:
      projectName: ingest-func
      jobName: DeployIngestFunctionApp
      functionAppName: 'fn-ingest-portal-$(environment)-$(region)-$(instance)'
      environmentServiceNameAzureRM: 'XI-Pay-As-You-Go'

  - job: DeployRepositoryApiBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $repositoryApiAppName = 'portal-repository-api-prd'
          $repositoryApiAppId = (az ad app list --filter "displayName eq '$repositoryApiAppName'" --query '[].appId') | ConvertFrom-Json

          az deployment group create `
          --resource-group 'rg-portal-prd-uksouth-01' `
          --template-file bicep/repositoryApi.bicep  `
          --parameters parLocation='uksouth' parEnvironment='prd' parKeyVaultName='kv-portal-prd-uksouth-01' parWebAppServicePlanName='plan-web-portal-prd-uksouth-01' parAppInsightsName='ai-portal-prd-uksouth-01' parApiManagementName='apim-portal-prd-uksouth-01' parRepositoryApiAppId=$repositoryApiAppId

  - template: templates/deploy-web-app.yml
    parameters:
      projectName: repository-webapi
      jobName: DeployRepositoryWebApp
      webAppName: 'webapi-repository-portal-$(environment)-$(region)-$(instance)'
      webAppNameResourceGroup: 'rg-portal-$(environment)-$(region)-$(instance)'
      environmentServiceNameAzureRM: 'XI-Pay-As-You-Go'

  - job: DeployRepositoryAppBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create `
          --resource-group 'rg-portal-prd-uksouth-01' `
          --template-file bicep/repositoryApp.bicep  `
          --parameters parLocation='uksouth' parEnvironment='prd' parKeyVaultName='kv-portal-prd-uksouth-01' parFuncAppServicePlanName='plan-fn-portal-prd-uksouth-01' parAppInsightsName='ai-portal-prd-uksouth-01' parApiManagementName='apim-portal-prd-uksouth-01' parServiceBusName='sb-portal-prd-uksouth-01'

  - template: templates/deploy-function-app.yml
    parameters:
      projectName: repository-func
      jobName: DeployRepositoryFunctionApp
      functionAppName: 'fn-repository-portal-$(environment)-$(region)-$(instance)'
      environmentServiceNameAzureRM: 'XI-Pay-As-You-Go'

  - job: DeploySyncAppBicep
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create `
          --resource-group 'rg-portal-prd-uksouth-01' `
          --template-file bicep/syncApp.bicep  `
          --parameters parLocation='uksouth' parEnvironment='prd' parKeyVaultName='kv-portal-prd-uksouth-01' parFuncAppServicePlanName='plan-fn-portal-prd-uksouth-01' parAppInsightsName='ai-portal-prd-uksouth-01' parApiManagementName='apim-portal-prd-uksouth-01' parServiceBusName='sb-portal-prd-uksouth-01'

  - template: templates/deploy-function-app.yml
    parameters:
      projectName: sync-func
      jobName: DeploySyncFunctionApp
      functionAppName: 'fn-sync-portal-$(environment)-$(region)-$(instance)'
      environmentServiceNameAzureRM: 'XI-Pay-As-You-Go'
trigger: none
pr: none

pool: 'Dedicated'

resources:
  repositories:
    - repository: ado-pipeline-templates
      type: github
      name: frasermolyneux/ado-pipeline-templates
      endpoint: github.com_frasermolyneux
  pipelines:
  - pipeline: xtremeidiots-portal.Validate
    source: xtremeidiots-portal.Validate
    trigger:
      branches:
        include:
        - main

stages: 
- stage: Build
  jobs:
  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildAdminWebApp'
      projectName: 'admin-webapp'
      nugetConfigPath: './src/nuget.config'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildEventsFunctionApp'
      projectName: 'events-func'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildIngestFunctionApp'
      projectName: 'ingest-func'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildRepositoryWebApi'
      projectName: 'repository-webapi'
      nugetConfigPath: './src/nuget.config'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildRepositoryFunctionApp'
      projectName: 'repository-func'
      nugetConfigPath: './src/nuget.config'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildSyncFunctionApp'
      projectName: 'sync-func'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildServersWebApi'
      projectName: 'servers-webapi'
      publishArtifact: true

  - template: jobs/build-sql-database.yml@ado-pipeline-templates
    parameters:
      publishArtifact: true

- stage: DeployPrdPlatform

  jobs:
  - job: DeployAADResources
    steps:
      - task: AzureCLI@2
        displayName: Create Database AAD Groups
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: "'prd'"
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/CreateDatabaseAADGroups.ps1'

  - deployment: DeployPlatformBicep
    dependsOn: [DeployAADResources]
    environment: 'xtremeidiots-portal-prd'

    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureCLI@2
              displayName: DeployPlatformBicep
              inputs:
                azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az deployment sub create `
                    --template-file bicep/platform.bicep `
                    --location uksouth `
                    --parameters @params/platform.prd.json

  - job: DeployPlatformPermissions
    dependsOn: [DeployPlatformBicep]
    steps:
      - task: AzureCLI@2
        displayName: SetDeployPrincipalPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '"prd" "uksouth"'
          addSpnToEnvironment: true
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetDeployPrincipalPermissions.ps1'

      - task: AzureCLI@2
        displayName: Create Application Registrations
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: "'prd' 'uksouth'"
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/CreateAppRegistrations.ps1'

      - task: AzureCLI@2
        displayName: CreateAppRegistrationsCredentials
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '"prd" "uksouth"'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/CreateAppRegistrationsCredentials.ps1'


- stage: DeployPrdServices

  jobs:
  - deployment: DeployServicesBicep
    environment: 'xtremeidiots-portal-prd'

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: DeployServicesBicep
            inputs:
              azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $eventsApiAppName = "portal-events-api-prd"
                $repositoryApiName = "portal-repository-api-prd"
                $serversApiName = "portal-servers-api-prd"

                $repositoryApiAppId = (az ad app list --filter "displayName eq '$repositoryApiName'" --query '[].appId') | ConvertFrom-Json
                $eventsApiAppId = (az ad app list --filter "displayName eq '$eventsApiAppName'" --query '[].appId') | ConvertFrom-Json
                $serversApiAppId = (az ad app list --filter "displayName eq '$serversApiName'" --query '[].appId') | ConvertFrom-Json

                az deployment group create --resource-group "rg-portal-prd-uksouth" `
                    --template-file bicep/services.bicep `
                    --parameters @params/services.prd.json `
                    parEventsApiAppId=$eventsApiAppId `
                    parRepositoryApiAppId=$repositoryApiAppId `
                    parServersApiAppId=$serversApiAppId 

  - job: DeployServicesPermissions
    dependsOn: [DeployServicesBicep]
    steps:
      - task: AzureCLI@2
        displayName: SetB3BotsClientAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetB3BotsClientAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetIngestApiFuncAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetIngestApiFuncAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetRepositoryApiAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetRepositoryApiAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetRepositoryAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetRepositoryAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetServersWebApiPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetServersWebApiPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetAdminWebAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetAdminWebAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetSyncAppPermissions
        inputs:
          azureSubscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: 'prd'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetSyncAppPermissions.ps1'

- stage: DeployPrdArtifacts

  jobs:
  - template: jobs/deploy-sql-database.yml@ado-pipeline-templates
    parameters:
      jobName: DeploySqlDatabase
      serverName: "sql-platform-prd-uksouth.database.windows.net"
      databaseName: 'portaldb-prd'
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd'
      sqlCmdArgs: '/Variables:env=prd'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeploySqlDatabase']
      environment: 'platform-webapps-prd-uksouth'
      projectName: repository-webapi
      jobName: DeployRepositoryWebApi
      webAppName: "webapi-repository-portal-prd-uksouth"
      webAppNameResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
      blueGreenDeploy: true

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: repository-func
      jobName: DeployRepositoryFunctionApp
      functionAppName: "fn-repository-portal-prd-uksouth"
      functionAppResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: ingest-func
      jobName: DeployIngestFunctionApp
      functionAppName: "fn-ingest-portal-prd-uksouth"
      functionAppResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: events-func
      jobName: DeployEventsFunctionApp
      functionAppName: "fn-events-portal-prd-uksouth"
      functionAppResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
      blueGreenDeploy: true

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: sync-func
      jobName: DeploySyncFunctionApp
      functionAppName: "fn-sync-portal-prd-uksouth"
      functionAppResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: servers-webapi
      jobName: DeployServersWebApi
      webAppName: "webapi-servers-portal-prd-uksouth"
      webAppNameResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
      blueGreenDeploy: true

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['DeployRepositoryWebApi']
      environment: 'platform-webapps-prd-uksouth'
      projectName: admin-webapp
      jobName: DeployAdminWebApp
      webAppName: "webapp-admin-portal-prd-uksouth"
      webAppNameResourceGroup: "rg-platform-webapps-prd-uksouth"
      subscription: 'spn-ado-XtremeIdiots-Public-xtremeidiots-portal-prd-webapps'
      blueGreenDeploy: true
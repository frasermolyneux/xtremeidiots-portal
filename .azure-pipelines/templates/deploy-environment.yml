parameters:
- name: azureSubscription
  type: string
- name: environment
  type: string
- name: environmentName
  type: string
- name: environmentTag
  type: string
- name: webAppsAzureSubscription
  type: string
- name: webAppsEnvironment
  type: string
- name: webAppsResourceGroup
  type: string
- name: blueGreenDeploy
  type: boolean
  default: false

stages:
- stage: Deploy${{ parameters.environmentName }}
  jobs:

  - deployment: Deploy${{ parameters.environmentName }}PlatformBicep
    environment: ${{ parameters.environment }}

    workspace:
      clean: all

    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureCLI@2
              displayName: Deploy${{ parameters.environmentName }}PlatformBicep
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az deployment sub create `
                    --name 'portalPlatform${{ parameters.environmentName }}' `
                    --template-file bicep/platform.bicep `
                    --location uksouth `
                    --parameters @params/platform.${{ parameters.environmentTag }}.json


  - job: Deploy${{ parameters.environmentName }}PlatformPermissions
    dependsOn: ['Deploy${{ parameters.environmentName }}PlatformBicep']

    workspace:
      clean: all

    steps:
      - task: AzureCLI@2
        displayName: SetDeployPrincipalPermissions
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '"${{ parameters.environmentTag }}" "uksouth"'
          addSpnToEnvironment: true
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetDeployPrincipalPermissions.ps1'

  - deployment: Deploy${{ parameters.environmentName }}ServicesBicep
    dependsOn: ['Deploy${{ parameters.environmentName }}PlatformPermissions']
    environment: ${{ parameters.environment }}

    workspace:
      clean: all

    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureCLI@2
              displayName: Deploy${{ parameters.environmentName }}ServicesBicep
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az deployment group create --resource-group "rg-portal-${{ parameters.environmentTag }}-uksouth" `
                    --name 'portalServices${{ parameters.environmentName }}' `
                    --template-file bicep/services.bicep `
                    --parameters @params/services.${{ parameters.environmentTag }}.json

  - job: Deploy${{ parameters.environmentName }}ServicesPermissions
    dependsOn: ['Deploy${{ parameters.environmentName }}ServicesBicep']

    workspace:
      clean: all

    steps:
      - task: AzureCLI@2
        displayName: SetAdminWebAppPermissions
        inputs:
          azureSubscription: ${{ parameters.webAppsAzureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '${{ parameters.environmentTag }}'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetAdminWebAppPermissions.ps1'

      - task: AzureCLI@2
        displayName: SetSyncAppPermissions
        inputs:
          azureSubscription: ${{ parameters.webAppsAzureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'scriptPath'
          arguments: '${{ parameters.environmentTag }}'
          scriptPath: '$(Build.sourcesDirectory)/.azure-pipelines/scripts/SetSyncAppPermissions.ps1'

#  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
#    parameters:
#      dependsOn: ['Deploy${{ parameters.environmentName }}RepositoryWebApi']
#      environment: ${{ parameters.webAppsEnvironment }}
#      projectName: sync-func
#      jobName: Deploy${{ parameters.environmentName }}SyncFunctionApp
#      functionAppName: "fn-sync-portal-${{ parameters.environmentTag }}-uksouth"
#      functionAppResourceGroup: ${{ parameters.webAppsResourceGroup }}
#      subscription: ${{ parameters.webAppsAzureSubscription }}

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters:
      dependsOn: ['Deploy${{ parameters.environmentName }}ServicesPermissions']
      environment: ${{ parameters.webAppsEnvironment }}
      projectName: admin-webapp
      jobName: Deploy${{ parameters.environmentName }}AdminWebApp
      webAppName: "webapp-admin-portal-${{ parameters.environmentTag }}-uksouth"
      webAppNameResourceGroup: ${{ parameters.webAppsResourceGroup }}
      subscription: ${{ parameters.webAppsAzureSubscription }}
      blueGreenDeploy: ${{ parameters.blueGreenDeploy }}
parameters:
- name: jobName
  type: string
  default: DeployFunctionApp
- name: dependsOn
  type: object
  default: []
- name: projectName
  type: string
  default: 'function-app'
- name: environment
  type: string
- name: functionAppName
  type: string
- name: functionAppResourceGroup
  type: string
- name: blueGreenDeploy
  type: boolean
  default: false
- name: subscription

jobs:
- deployment: ${{ parameters.jobName }}
  dependsOn: ${{ parameters.dependsOn }}
  environment: ${{ parameters.environment }}

  strategy:
    runOnce:
      deploy:
        steps: 
        - download: current
          displayName: 'Download ${{ parameters.projectName }} artifact'
          artifact: ${{ parameters.projectName }}

        - ${{ if eq(parameters.blueGreenDeploy, false) }}:
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy: ${{ parameters.projectName }}'
            inputs:
              azureSubscription: '${{ parameters.subscription }}'
              appName: '${{ parameters.functionAppName }}'
              package: '$(Pipeline.Workspace)/${{ parameters.projectName }}/${{ parameters.projectName }}.zip'

        - ${{ if eq(parameters.blueGreenDeploy, true) }}:
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy: ${{ parameters.projectName }}'
            inputs:
              azureSubscription: '${{ parameters.subscription }}'
              appName: '${{ parameters.functionAppName }}'
              deployToSlotOrASE: true
              slotName: 'staging'
              resourceGroupName: '${{ parameters.functionAppResourceGroup }}'
              package: '$(Pipeline.Workspace)/${{ parameters.projectName }}/${{ parameters.projectName }}.zip'

        - ${{ if eq(parameters.blueGreenDeploy, true) }}:
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: '${{ parameters.subscription }}'
              webAppName: '${{ parameters.functionAppName }}'
              action: 'Swap Slots'
              resourceGroupName: '${{ parameters.functionAppResourceGroup }}'
              sourceSlot: 'staging'
              swapWithProduction: 'true'
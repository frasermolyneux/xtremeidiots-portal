parameters:
- name: jobName
  type: string
  default: TerraformDestroy
- name: dependsOn
  type: object
  default: []
- name: additionalCommandOptions
  type: string
  default: ""
- name: workingDirectory
- name: backendServiceArm
- name: backendAzureRmResourceGroupName
- name: backendAzureRmStorageAccountName
- name: backendAzureRmContainerName
- name: backendAzureRmKey
- name: environmentServiceNameAzureRM
- name: varFile

jobs:
- job: ${{ parameters.jobName }}
  dependsOn: ${{ parameters.dependsOn }}

  variables:
    commandOptions: '-var-file="${{ parameters.varFile }}" ${{ parameters.additionalCommandOptions }}'

  steps:
    - task: TerraformInstaller@0
      displayName: 'Terraform: Install'
      inputs:
        terraformVersion: '1.1.2'

    - task: TerraformTaskV2@2
      displayName: 'Terraform: Init'
      inputs:
        workingDirectory: '${{ parameters.workingDirectory }}'
        backendServiceArm: '${{ parameters.backendServiceArm }}'
        backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
        backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
        backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
        backendAzureRmKey: '${{ parameters.backendAzureRmKey }}'

    - task: TerraformTaskV2@2
      displayName: 'Terraform: Destroy'
      inputs:
        command: destroy
        workingDirectory: '${{ parameters.workingDirectory }}'
        commandOptions: '$(commandOptions)'
        environmentServiceNameAzureRM: '${{ parameters.environmentServiceNameAzureRM }}'

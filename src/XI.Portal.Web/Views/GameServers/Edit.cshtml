@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XI.Portal.Auth.Contract.Constants
@using XtremeIdiots.Portal.RepositoryApi.Abstractions.NetStandard.Models
@model GameServerDto

@{
    ViewData["Title"] = "Edit Game Server";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <form asp-action="Edit">

        <input type="hidden" asp-for="Id" />

        <row class="row">
            <div class="col-12">

                <div class="container-fluid">
                    <div class="ibox">
                        <div class="ibox-title">
                            General
                        </div>
                        <div class="ibox-content">
                            <div class="form-group">
                                <label asp-for="GameType" class="control-label"></label>
                                <select asp-for="GameType" class="form-control" asp-items="ViewBag.GameType" disabled="disabled"></select>
                                <span asp-validation-for="GameType" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Title" class="control-label"></label>
                                <input asp-for="Title" class="form-control" />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Hostname" class="control-label"></label>
                                <input asp-for="Hostname" class="form-control" />
                                <span asp-validation-for="Hostname" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="QueryPort" class="control-label"></label>
                                <input asp-for="QueryPort" class="form-control" />
                                <span asp-validation-for="QueryPort" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </row>

        @{
            var canEditFtpCredentials = (await AuthorizationService.AuthorizeAsync(User, Model, AuthPolicies.EditGameServerFtp)).Succeeded;
            var canEditRconCredentials = (await AuthorizationService.AuthorizeAsync(User, Model, AuthPolicies.EditGameServerRcon)).Succeeded;
        }

        @if (canEditFtpCredentials || canEditRconCredentials)
        {
            <row class="row">
                <div class="col-12">

                    <div class="container-fluid">
                        <div class="ibox">
                            <div class="ibox-title">
                                Credentials
                            </div>
                            <div class="ibox-content">
                                @if (canEditFtpCredentials)
                                {
                                    <div class="form-group">
                                        <label asp-for="FtpHostname" class="control-label"></label>
                                        <input asp-for="FtpHostname" class="form-control" />
                                        <span asp-validation-for="FtpHostname" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="FtpUsername" class="control-label"></label>
                                        <input asp-for="FtpUsername" class="form-control" />
                                        <span asp-validation-for="FtpUsername" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="FtpPassword" class="control-label"></label>
                                        <input asp-for="FtpPassword" class="form-control" />
                                        <span asp-validation-for="FtpPassword" class="text-danger"></span>
                                    </div>
                                }
                                @if (canEditRconCredentials)
                                {
                                    <div class="form-group">
                                        <label asp-for="RconPassword" class="control-label"></label>
                                        <input asp-for="RconPassword" class="form-control" />
                                        <span asp-validation-for="RconPassword" class="text-danger"></span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </row>
        }

        <row class="row">
            <div class="col-12">

                <div class="container-fluid">
                    <div class="ibox">
                        <div class="ibox-title">
                            Display Options
                        </div>
                        <div class="ibox-content">
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="ShowOnBannerServerList" /> @Html.DisplayNameFor(model => model.ShowOnBannerServerList)
                                </label>
                            </div>
                            <div class="form-group">
                                <label asp-for="BannerServerListPosition" class="control-label"></label>
                                <input asp-for="BannerServerListPosition" class="form-control" />
                                <span asp-validation-for="BannerServerListPosition" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="HtmlBanner" class="control-label"></label>
                                <textarea asp-for="HtmlBanner" class="form-control" style="height: 200px"></textarea>
                                <span asp-validation-for="HtmlBanner" class="text-danger"></span>
                            </div>
                            <hr />
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="ShowOnPortalServerList" /> @Html.DisplayNameFor(model => model.ShowOnPortalServerList)
                                </label>
                            </div>
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="ShowChatLog" /> @Html.DisplayNameFor(model => model.ShowChatLog)
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </row>

        <row class="row">
            <div class="col-12">

                <div class="container-fluid">
                    <div class="ibox">
                        <div class="ibox-title">
                            @ViewData["Title"]
                        </div>
                        <div class="ibox-content">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                        <div class="ibox-footer">
                            <div class="btn-group btn-group-sm" role="group">
                                <a type="button" class="btn btn-primary" asp-action="Index"><i class="fa fa-arrow-left"></i> Back to List</a>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </row>

    </form>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
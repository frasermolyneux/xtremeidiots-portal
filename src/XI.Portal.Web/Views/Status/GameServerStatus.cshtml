@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XI.Portal.Web.Extensions
@model List<XI.Portal.Servers.Dto.PortalGameServerStatusDto>

@{
    ViewData["Title"] = "Game Server Status";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle"></i> This confirms that the process that retrieves the player data to display on the servers section of this website is functioning correctly.
    </div>

    <div class="alert alert-warning" role="alert">
        <i class="fa fa-warning"></i> This page is used for monitoring but at present does not alert. If there is an error displaying below then please contact Sitting-Duc.
    </div>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <h2>Game Server Status</h2>

                        <hr/>

                        <p>
                            This feature is where the portal gets its server and player data such as the connected players, current map and scores.
                            There is a process that runs every five minutes that will:
                            <ul>
                                <li>Retrieve the current game server status.</li>
                                <li>Retrieve the connected player data if the server is configure with Rcon.</li>
                                <li>Update the players database with usernames, GUIDs and aliases.</li>
                                <li>Update the servers database with the current player count and map.</li>
                            </ul>
                        </p>

                        <hr/>

                        <h3>When stuff goes wrong</h3>
                        <p>
                            Rcon and it's underlying use of UDP for network communication is not an exact science. It goes wrong, often.
                            The portal will try and handle failed requests, invalid and corrupt data and general failures however in some cases human intervention is required.
                        </p>
                        <p>
                            If this page shows an error then contact Sitting-Duc for a resolution.
                        </p>

                        <hr/>

                        <h3>Conditions for this page showing an error:</h3>
                        <ul>
                            <li>The server has not been directly queried within the past 20 minutes</li>
                        </ul>
                    </div>
                </div>
            </div>

        </div>
    </row>

    @foreach (var item in Model)
    {
        <row class="row">
            <div class="col-12">

                <div class="container-fluid">
                    <div class="ibox">
                        <div class="ibox-title">
                            <span>
                                @Html.GameTypeIcon(item.GameType.ToString()) @Html.ServerName(item.ServerName, item.ServerName)
                            </span>
                        </div>
                        <div class="ibox-content">
                            <p>
                                <strong>Server Hostname: </strong>@item.Hostname<br/>
                                <strong>Last Queried: </strong>@item.Timestamp<br/>
                                <strong>Mod: </strong>@item.Mod<br/>
                                <strong>Map: </strong>@item.Map<br/>
                                <strong>Player Count: </strong>@item.PlayerCount<br/>

                                @if (DateTime.UtcNow.AddMinutes(-20) > item.Timestamp)
                                {
                                    <div class="alert alert-danger">Server has not been queried in the past 20 minutes</div>
                                }
                                else
                                {
                                    <div class="alert alert-success">Everything looks OK, on the surface at least.</div>
                                }

                                @if (string.IsNullOrWhiteSpace(item.Map))
                                {
                                    <div class="alert alert-danger">Map could not be retrieved from the server</div>
                                }
                            </p>
                        </div>
                    </div>
                </div>

            </div>
        </row>
    }
</div>
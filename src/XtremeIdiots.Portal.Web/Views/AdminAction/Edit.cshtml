@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.Web.ViewModels
@using XtremeIdiots.Portal.Repository.Abstractions.Constants.V1
@using XtremeIdiots.Portal.Web.Auth.Constants
@inject IAuthorizationService AuthorizationService
@model EditAdminActionViewModel

@{
    ViewData["Title"] = $"Editing {Model.Type} for {Model.PlayerDto?.Username ?? "Unknown Player"}";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle" aria-hidden="true"></i> Enter the reason for your @Model.Type in the text box below. 
        You can use rich text (bold/italic etc.) however images and video are not supported.
        If a forum topic has been previously created then it will be updated with the new content.
    </div>

    <div class="row">
        <div class="col-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>@ViewData["Title"]</h5>
                </div>

                <div class="ibox-content">
                    <form asp-action="Edit" method="post" novalidate data-testid="admin-action-edit-form">
                        <input type="hidden" asp-for="AdminActionId" />
                        <input type="hidden" asp-for="PlayerId" />
                        <input type="hidden" asp-for="Type" />
                        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

                        <div class="form-group">
                            <label asp-for="Text" class="sr-only">Reason</label>
                            <textarea id="summernote" asp-for="Text" class="form-control"
                                placeholder="Enter the reason for this @Model.Type..." 
                                aria-describedby="text-help" required
                                data-testid="admin-action-form-text"></textarea>
                            <span asp-validation-for="Text" class="text-danger" role="alert"></span>
                            <small id="text-help" class="form-text text-muted">
                                Provide a clear and detailed reason for this @Model.Type action.
                            </small>
                        </div>

                        @if (Model.Type == AdminActionType.TempBan)
                        {
                            <div class="form-group">
                                <label asp-for="Expires" class="form-label">Expiration Date</label>
                                <input asp-for="Expires" class="form-control" type="datetime-local" 
                                    aria-describedby="expires-help"
                                    data-testid="admin-action-form-expires" />
                                <span asp-validation-for="Expires" class="text-danger" role="alert"></span>
                                <small id="expires-help" class="form-text text-muted">
                                    Select when this temporary ban should automatically expire.
                                </small>
                            </div>
                        }

                        @if (Model.PlayerDto is not null && (await AuthorizationService.AuthorizeAsync(User,
                                                Model.PlayerDto.GameType,
                                                AuthPolicies.ChangeAdminActionAdmin)).Succeeded)
                        {
                            <div class="form-group">
                                <label asp-for="AdminId" class="form-label">Admin ID</label>
                                <input asp-for="AdminId" class="form-control" type="number" min="0"
                                    placeholder="Enter admin forum ID or leave empty for unclaimed" 
                                    aria-describedby="admin-help"
                                    data-testid="admin-action-form-adminid" />
                                <span asp-validation-for="AdminId" class="text-danger" role="alert"></span>
                                <small id="admin-help" class="form-text text-muted">
                                    To set this @Model.Type as claimed by an admin enter their forum id (this can be located by going to their profile and looking at the number in the URL).
                                    To set the @Model.Type as unclaimed leave the field empty.
                                </small>
                            </div>
                        }

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary"
                                data-testid="admin-action-edit-submit">
                                <i class="fa fa-save fa-fw" aria-hidden="true"></i> Save @Model.Type
                            </button>
                            <a asp-controller="Players" asp-action="Details" asp-route-id="@Model.PlayerId"
                                class="btn btn-secondary ml-2"
                                data-testid="admin-action-edit-cancel">
                                <i class="fa fa-times fa-fw" aria-hidden="true"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/summernote/summernote-bs4.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/summernote/summernote-bs4.js"></script>
    </environment>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#summernote').summernote({
                focus: true,
                styleWithSpan: false,
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol']],
                    ['insert', ['link']]
                ],
                height: 350,
                callbacks: {
                    onPaste: function (e) {
                        var bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');
                        e.preventDefault();
                        document.execCommand('insertText', false, bufferText);
                    }
                }
            });
        });
    </script>
}

@using XtremeIdiots.Portal.Repository.Abstractions.Constants.V1
@using XtremeIdiots.Portal.Repository.Abstractions.Models.V1.AdminActions
@model AdminActionDto

@{
    ViewData["Title"] = $"Lift {Model?.Type.ToString() ?? "Admin Action"}";
    ViewData["Description"] = "Lift admin action confirmation page";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle" aria-hidden="true"></i>
        After you lift the below @(Model?.Type.ToString() ?? "admin action") it may take up to an hour before the
        @(Model?.Type.ToString() ?? "action") is removed from all of the servers.
        It is best to inform the player that the ban may take up to 24 hours to be removed.
    </div>

    <div class="row">
        <div class="col-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>@ViewData["Title"]</h5>
                </div>
                <div class="ibox-content">
                    <h3>Are you sure you want to lift this @(Model?.Type.ToString() ?? "admin action")?</h3>
                    <dl class="row">
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.Type)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Type)
                        </dd>

                        @if (Model?.Type == AdminActionType.TempBan)
                        {
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Expires)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Expires)
                            </dd>
                        }

                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.Player.Username)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Player.Username)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => model.Text)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.Raw(Model?.Text ?? string.Empty)
                        </dd>
                    </dl>
                </div>
                <div class="ibox-footer">
                    <form asp-action="Lift" method="post">
                        <input type="hidden" asp-for="AdminActionId" />
                        <input type="hidden" asp-for="PlayerId" />
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="submit" class="btn btn-danger" aria-label="Confirm lift action">
                                <i class="fa fa-unlock" aria-hidden="true"></i> Lift @(Model?.Type.ToString() ??
                                                                "Action")
                            </button>
                            <a class="btn btn-primary" asp-controller="Players" asp-action="Details"
                                asp-route-id="@Model?.PlayerId" aria-label="Return to player details">
                                <i class="fa fa-arrow-left" aria-hidden="true"></i> Back to Player
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

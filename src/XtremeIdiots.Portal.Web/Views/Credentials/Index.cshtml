@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.Web.Auth.Constants
@using XtremeIdiots.Portal.Web.Extensions
@using XtremeIdiots.Portal.Web.ViewModels
@using XtremeIdiots.Portal.Repository.Abstractions.Constants.V1
@using XtremeIdiots.Portal.Repository.Abstractions.Models.V1
@using XtremeIdiots.Portal.Repository.Abstractions.Models.V1.GameServers
@model IEnumerable<GameServerDto>

@{
    ViewData["Title"] = "Game Server Credentials";
}

@{
    var showFtpColumns = Model.Any(item => AuthorizationService.AuthorizeAsync(User, new Tuple<GameType,
    Guid>(item.GameType, item.GameServerId), AuthPolicies.ViewFtpCredential).Result.Succeeded);
    var showRconColumn = Model.Any(item => AuthorizationService.AuthorizeAsync(User, new Tuple<GameType,
    Guid>(item.GameType, item.GameServerId), AuthPolicies.ViewRconCredential).Result.Succeeded);
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle"></i> To reveal a password simply click on the ****** and you will be able to see
        and copy the password.
    </div>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameType)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Title)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Hostname)
                                    </th>

                                    @if (showRconColumn)
                                    {
                                        <th>
                                            @Html.DisplayNameFor(model => model.RconPassword)
                                        </th>
                                    }

                                    @if (showFtpColumns)
                                    {
                                        <th>
                                            @Html.DisplayNameFor(model => model.FtpHostname)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.FtpUsername)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.FtpPassword)
                                        </th>
                                    }

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.GameTypeIcon(item.GameType)
                                        </td>
                                        <td>
                                            @Html.ServerName(item.Title, null)
                                        </td>
                                        <td>
                                            @Html.ServerHostAndPort(item.Hostname, item.QueryPort)
                                        </td>

                                        @if (showRconColumn)
                                        {
                                            if ((await AuthorizationService.AuthorizeAsync(User, new Tuple<GameType,
                                            Guid>(item.GameType, item.GameServerId), AuthPolicies.ViewRconCredential)).Succeeded
                                            && !string.IsNullOrWhiteSpace(item.RconPassword))
                                            {
                                                <td>
                                                    <span id="rconPassword-@item.GameServerId-dummy">
                                                        *******
                                                        <i class="fa fa-eye"></i>
                                                    </span>
                                                    <span id="rconPassword-@item.GameServerId"
                                                        style="display: none">@item.RconPassword</span>
                                                </td>
                                            }
                                            else
                                            {
                                                <td></td>
                                            }
                                        }

                                        @if (showFtpColumns)
                                        {
                                            if ((await AuthorizationService.AuthorizeAsync(User, new Tuple<GameType,
                                            Guid>(item.GameType, item.GameServerId), AuthPolicies.ViewFtpCredential)).Succeeded)
                                            {
                                                <td>
                                                    <span>@item.FtpHostname</span>
                                                </td>

                                                if (!string.IsNullOrWhiteSpace(item.FtpUsername))
                                                {
                                                    <td>
                                                        <span id="ftpUsername-@item.GameServerId-dummy">
                                                            *******
                                                            <i class="fa fa-eye"></i>
                                                        </span>
                                                        <span id="ftpUsername-@item.GameServerId"
                                                            style="display: none">@item.FtpUsername</span>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                if (!string.IsNullOrWhiteSpace(item.FtpPassword))
                                                {
                                                    <td>
                                                        <span id="ftpPassword-@item.GameServerId-dummy">
                                                            *******
                                                            <i class="fa fa-eye"></i>
                                                        </span>
                                                        <span id="ftpPassword-@item.GameServerId"
                                                            style="display: none">@item.FtpPassword</span>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                            }
                                            else
                                            {
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            }
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="ibox-footer">

                    </div>
                </div>
            </div>

        </div>
    </row>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
                                                @foreach (var item in Model)
                {
                    <text>
                        $("#rconPassword-@item.GameServerId-dummy").click(function() {
                            $("#rconPassword-@item.GameServerId-dummy").hide();
                        $("#rconPassword-@item.GameServerId").show();
                                                                                            });

                        $("#ftpUsername-@item.GameServerId-dummy").click(function() {
                            $("#ftpUsername-@item.GameServerId-dummy").hide();
                        $("#ftpUsername-@item.GameServerId").show();
                                                                                            });

                        $("#ftpPassword-@item.GameServerId-dummy").click(function() {
                            $("#ftpPassword-@item.GameServerId-dummy").hide();
                        $("#ftpPassword-@item.GameServerId").show();
                                                                                            });
                    </text>
            }
                                            })
    </script>

}
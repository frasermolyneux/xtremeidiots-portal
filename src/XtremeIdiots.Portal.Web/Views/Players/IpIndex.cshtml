@{
    ViewData["Title"] = "IP Search";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table id="dataTable">
                            <thead>
                                <tr>
                                    <td>Name</td>
                                    <td>Guid</td>
                                    <td>Ip Address</td>
                                    <td>First Seen</td>
                                    <td>Last Seen</td>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {

    <script type="text/javascript">

        $(document).ready(function () {
            $('#dataTable').DataTable({
                processing: true,
                serverSide: true,
                searchDelay: 1000,
                stateSave: true,
                order: [[4, "desc"]],
                ajax: {
                    url: '/Players/GetIpSearchListAjax',
                    dataSrc: 'data',
                    contentType: "application/json",
                    type: "POST",
                    "data": function (d) {
                        return JSON.stringify(d);
                    }
                },
                columns: [
                    {
                        data: 'username',
                        name: 'username',
                        sortable: false,
                        render: function (data, type, row) {
                            return renderPlayerName(row['gameType'], row['username'], row['playerId']);
                        }
                    },
                    {
                        data: 'guid',
                        name: 'guid',
                        sortable: false
                    },
                    {
                        data: 'ipAddress',
                        name: 'ipAddress',
                        sortable: false,
                        render: function (data, type, row) {
                            // We'll use custom properties passed from the ProxyCheck extensions
                            var riskScore = row['proxyCheckRiskScore'] || 0;
                            var isProxy = row['isProxy'] === true;
                            var isVpn = row['isVpn'] === true;
                            var proxyType = row['proxyType'] || '';
                            return formatIPAddress(row['ipAddress'], riskScore, isProxy, isVpn, proxyType);
                        }
                    },
                    {
                        data: 'firstSeen',
                        name: 'firstSeen',
                        sortable: true
                    },
                    {
                        data: 'lastSeen',
                        name: 'lastSeen',
                        sortable: true
                    }
                ]
            });
        });

    </script>
}

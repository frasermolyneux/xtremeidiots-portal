@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.Web.Auth.Constants
@using XtremeIdiots.Portal.Repository.Abstractions.Models.V1.ChatMessages
@model ChatMessageDto

@{
    ViewData["Title"] = "Chat Log Entry";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-12">

            <div class="ibox">
                <div class="ibox-title">
                    <h5>Chat Log Entry - @Model.ChatMessageId</h5>
                    @if (Model.Locked)
                    {
                        <span class="label label-warning"><i class="fa fa-lock"></i> Locked</span>
                    }
                </div>

                <div class="ibox-content">
                    <ul class="list-group clear-list">
                        <li class="list-group-item fist-item">
                            <span class="pull-right"> @Model.PlayerId</span>
                            Player ID
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right"> @Model.Username</span>
                            Username
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right"> @Model.ChatType</span>
                            Type
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right"> @Model.Message</span>
                            Chat Message
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right"> @Model.GameServer?.LiveTitle</span>
                            Server
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right">
                                <i class="fa fa-clock-o"></i> @Model.Timestamp
                            </span>
                            Timestamp
                        </li>
                        <li class="list-group-item">
                            <span class="pull-right">
                                @if (Model.Locked)
                                {
                                    <i class="fa fa-lock"></i> <text>Yes</text>
                                }
                                else
                                {
                                    <i class="fa fa-unlock"></i> <text>No</text>
                                }
                            </span>
                            Locked
                        </li>
                    </ul>
                </div>

                @if (Model.GameServer is not null && (await AuthorizationService.AuthorizeAsync(User, Model.GameServer.GameType,
                                AuthPolicies.LockChatMessages)).Succeeded)
                {
                    <div class="ibox-footer">
                        <div class="btn-group btn-group-sm" role="group">
                            <form asp-controller="ServerAdmin" asp-action="ToggleChatMessageLock"
                                asp-route-id="@Model.ChatMessageId" method="post">
                                <button type="submit" class="btn @(Model.Locked ? "btn-success" : "btn-warning")">
                                    @if (Model.Locked)
                                    {
                                        <i class="fa fa-unlock"></i> <text>Unlock Message</text>
                                    }
                                    else
                                    {
                                        <i class="fa fa-lock"></i> <text>Lock Message</text>
                                    }
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
method="post">

@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.AdminWebApp.Auth.Constants
@using XtremeIdiots.Portal.AdminWebApp.Extensions
@using XtremeIdiots.Portal.RepositoryApi.Abstractions.Models.GameServers
@model IEnumerable<GameServerDto>

@{
    ViewData["Title"] = "Game Servers";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ServerListPosition)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameType)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Title)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Hostname)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LiveTrackingEnabled)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PortalServerListEnabled)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.BannerServerListEnabled)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ChatLogEnabled)
                                </th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ServerListPosition)
                                    </td>
                                    <td>
                                        @Html.GameTypeIcon(item.GameType)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Title)
                                    </td>
                                    <td>
                                        @Html.ServerHostAndPort(item.Hostname, item.QueryPort)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LiveTrackingEnabled)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PortalServerListEnabled)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BannerServerListEnabled)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ChatLogEnabled)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            @if ((await AuthorizationService.AuthorizeAsync(User, item.GameType, AuthPolicies.EditGameServer)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="Edit" asp-route-id="@item.GameServerId"><i class="fa fa-edit"></i> Edit</a>
                                            }

                                            @if ((await AuthorizationService.AuthorizeAsync(User, item.GameType, AuthPolicies.ViewGameServer)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="Details" asp-route-id="@item.GameServerId"><i class="fa fa-info-circle"></i> Details</a>
                                            }

                                            @if ((await AuthorizationService.AuthorizeAsync(User, AuthPolicies.DeleteGameServer)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-danger" asp-action="Delete" asp-route-id="@item.GameServerId"><i class="fa fa-trash"></i> Delete</a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div class="ibox-footer">
                        <div class="btn-group btn-group-sm" role="group">
                            <a type="button" class="btn btn-primary" asp-action="Create"><i class="fa fa-plus"></i> Create New</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>
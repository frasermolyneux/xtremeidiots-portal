@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.AdminWebApp.Auth.Constants
@model List<XtremeIdiots.Portal.RepositoryApi.Abstractions.Models.Tags.PlayerTagDto>
@inject IAuthorizationService AuthorizationService

<div class="panel-body">
    <h5>Player Tags</h5>

    @if (Model.Any())
    {
        <div>
            @foreach (var playerTag in Model)
            {
                <div class="mb-2 d-flex align-items-center">
                    <div class="mr-2">
                        @Html.Raw(playerTag.Tag?.TagHtml)
                    </div>
                    @if ((await AuthorizationService.AuthorizeAsync(User, AuthPolicies.DeletePlayerTag)).Succeeded)
                    {
                        <a asp-controller="Players" asp-action="RemovePlayerTag" asp-route-id="@playerTag.PlayerId"
                            asp-route-playerTagId="@playerTag.PlayerTagId" class="btn btn-xs btn-danger ml-2">
                            <i class="fa fa-times"></i>
                        </a>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            No tags assigned to this player.
        </div>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, AuthPolicies.CreatePlayerTag)).Succeeded)
    {
        <p>
            <a asp-controller="Players" asp-action="AddPlayerTag" asp-route-id="@ViewBag.PlayerId" class="btn btn-primary">
                <i class="fa fa-plus"></i> Add Tag
            </a>
        </p>
    }
</div>

           
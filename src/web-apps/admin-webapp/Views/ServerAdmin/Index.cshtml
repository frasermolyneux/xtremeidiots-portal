@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XtremeIdiots.Portal.AdminWebApp.Auth.Constants
@using XtremeIdiots.Portal.AdminWebApp.Constants
@using XtremeIdiots.Portal.AdminWebApp.Extensions
@using XtremeIdiots.Portal.AdminWebApp.Models
@model List<ServerAdminGameServerViewModel>

@{
    ViewData["Title"] = "Live Rcon";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                            <tr>
                                <th>
                                    @Html.Label("Title")
                                </th>
                                <th>
                                    @Html.Label("Hostname")
                                </th>
                                <th>
                                    @Html.Label("Players")
                                </th>
                                <th>
                                    @Html.Label("Map")
                                </th>
                                <th>
                                    @Html.Label("Mod")
                                </th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.GameTypeIcon(item.GameServer.GameType.ToString()) @Html.ServerName(item.GameServer.Title, item.GameServer.LiveTitle)
                                    </td>
                                    <td>
                                        @Html.ServerHostAndPort(item.GameServer.Hostname, item.GameServer.QueryPort)
                                    </td>
                                    <td>
                                        @{
                                            double percentage = 0;
                                            if (item.GameServer.LiveCurrentPlayers != 0 && item.GameServer.LiveMaxPlayers != 0)
                                            {
                                                percentage = (double) item.GameServer.LiveCurrentPlayers / item.GameServer.LiveMaxPlayers * 100;
                                            }
                                        }

                                        <div class="progress" style="margin-right: 20px">
                                            <div style="width: @percentage%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="@percentage" role="progressbar" class="progress-bar">
                                                <span class="sr-only">@percentage% Slots Filled</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @item.GameServer.LiveMap
                                    </td>
                                    <td>
                                        @item.GameServer.LiveMod
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                            @if ((await AuthorizationService.AuthorizeAsync(User, item.GameServer.GameType, AuthPolicies.ViewLiveRcon)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="ViewRcon" asp-route-id="@item.GameServer.Id"><i class="fa fa-terminal"></i> View Rcon</a>
                                            }

                                            @if ((await AuthorizationService.AuthorizeAsync(User, item.GameServer.GameType, AuthPolicies.ViewServerChatLog)).Succeeded
                                                 && ChatLogSupportedGames.Games.Contains(item.GameServer.GameType))
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="ServerChatLog" asp-route-id="@item.GameServer.Id"><i class="fa fa-comments"></i> View ChatLog</a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>